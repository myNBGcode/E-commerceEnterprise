{
	"info": {
		"_postman_id": "326526b9-17ed-43ab-9004-6112f3deea1b",
		"name": "NBG e-Enterprise",
		"schema": "https://schema.getpostman.com/json/collection/v2.1.0/collection.json"
	},
	"item": [
		{
			"name": "One Step Payment - Pay - 3DS 2.0",
			"item": [
				{
					"name": "Create Session",
					"event": [
						{
							"listen": "test",
							"script": {
								"exec": [
									"var jsonData = JSON.parse(responseBody);",
									"postman.setEnvironmentVariable(\"SESSION_ID\", jsonData.session.id);",
									""
								],
								"type": "text/javascript"
							}
						}
					],
					"request": {
						"method": "POST",
						"header": [
							{
								"key": "Content-Type",
								"name": "Content-Type",
								"type": "text",
								"value": "application/json"
							}
						],
						"body": {
							"mode": "raw",
							"raw": "{\r\n    \"lineOfBusiness\": \"ENFORCE\"\r\n}"
						},
						"url": {
							"raw": "https://{{PROD_URL}}/api/rest/version/57/merchant/{{MID}}/session",
							"protocol": "https",
							"host": [
								"{{PROD_URL}}"
							],
							"path": [
								"api",
								"rest",
								"version",
								"57",
								"merchant",
								"{{MID}}",
								"session"
							]
						}
					},
					"response": []
				},
				{
					"name": "Update Session",
					"event": [
						{
							"listen": "test",
							"script": {
								"exec": [
									"var jsonData = JSON.parse(responseBody);",
									"postman.setEnvironmentVariable(\"SESSION_ID\", jsonData.session.id);",
									""
								],
								"type": "text/javascript"
							}
						}
					],
					"request": {
						"method": "PUT",
						"header": [
							{
								"key": "Content-Type",
								"name": "Content-Type",
								"type": "text",
								"value": "application/json"
							}
						],
						"body": {
							"mode": "raw",
							"raw": "{\n    \"sourceOfFunds\": {\n        \"provided\": {\n            \"card\": {\n                \"expiry\": {\n                    \"month\": \"05\",\n                    \"year\": \"21\"\n                },\n                \"nameOnCard\": \"test\",\n                \"number\": \"5123450000000008\",\n                \"securityCode\": \"100\"\n            }\n        },\n        \"type\": \"CARD\"\n    }\n}\n"
						},
						"url": {
							"raw": "https://{{PROD_URL}}/api/rest/version/57/merchant/{{MID}}/session/{{SESSION_ID}}",
							"protocol": "https",
							"host": [
								"{{PROD_URL}}"
							],
							"path": [
								"api",
								"rest",
								"version",
								"57",
								"merchant",
								"{{MID}}",
								"session",
								"{{SESSION_ID}}"
							]
						}
					},
					"response": []
				},
				{
					"name": "Initiate Authentication",
					"event": [
						{
							"listen": "test",
							"script": {
								"exec": [
									"var jsonData = JSON.parse(responseBody);\r",
									"postman.setEnvironmentVariable(\"ORDER_ID\", jsonData.order.id);\r",
									"postman.setEnvironmentVariable(\"TRXN_ID\", jsonData.transaction.id);"
								],
								"type": "text/javascript"
							}
						}
					],
					"request": {
						"method": "PUT",
						"header": [
							{
								"key": "Content-Type",
								"name": "Content-Type",
								"type": "text",
								"value": "application/json"
							}
						],
						"body": {
							"mode": "raw",
							"raw": "{\n    \"apiOperation\": \"INITIATE_AUTHENTICATION\",\n    \"order\": {\n        \"currency\": \"EUR\"\n    },\n    \"session\": {\n        \"id\": \"{{SESSION_ID}}\"\n    },\n    \"authentication\": {\n        \"channel\": \"PAYER_BROWSER\",\n        \"purpose\": \"PAYMENT_TRANSACTION\",\n        \"acceptVersions\": \"3DS1,3DS2\"\n    }\n}"
						},
						"url": {
							"raw": "https://{{PROD_URL}}/api/rest/version/57/merchant/{{MID}}/order/{{$guid}}/transaction/{{$guid}}",
							"protocol": "https",
							"host": [
								"{{PROD_URL}}"
							],
							"path": [
								"api",
								"rest",
								"version",
								"57",
								"merchant",
								"{{MID}}",
								"order",
								"{{$guid}}",
								"transaction",
								"{{$guid}}"
							]
						}
					},
					"response": []
				},
				{
					"name": "Authenticate Payer",
					"event": [
						{
							"listen": "test",
							"script": {
								"exec": [
									"var jsonData = JSON.parse(responseBody);\r",
									"postman.setEnvironmentVariable(\"TRXN_ID\", jsonData.transaction.id);"
								],
								"type": "text/javascript"
							}
						}
					],
					"request": {
						"method": "PUT",
						"header": [
							{
								"key": "Content-Type",
								"name": "Content-Type",
								"type": "text",
								"value": "application/json"
							}
						],
						"body": {
							"mode": "raw",
							"raw": "{\n    \"apiOperation\": \"AUTHENTICATE_PAYER\",\n    \"order\": {\n        \"currency\": \"EUR\",\n        \"amount\": 10\n    },\n    \"device\": {\n    \"browser\": \"CHROME\",\n    \"browserDetails\": {\n      \"3DSecureChallengeWindowSize\": \"FULL_SCREEN\",\n      \"acceptHeaders\": \"application/json\",\n      \"colorDepth\": 24,\n      \"javaEnabled\": true,\n      \"language\": \"en-US\",\n      \"screenHeight\": 960,\n      \"screenWidth\": 740,\n      \"timeZone\": -120\n    }\n    },\n    \"authentication\": {\n        \"redirectResponseUrl\": \"https://www.nbg.gr\"\n    },\n    \"session\": {\n        \"id\": \"{{SESSION_ID}}\"\n    }\n\n}"
						},
						"url": {
							"raw": "https://{{PROD_URL}}/api/rest/version/57/merchant/{{MID}}/order/{{ORDER_ID}}/transaction/{{TRXN_ID}}",
							"protocol": "https",
							"host": [
								"{{PROD_URL}}"
							],
							"path": [
								"api",
								"rest",
								"version",
								"57",
								"merchant",
								"{{MID}}",
								"order",
								"{{ORDER_ID}}",
								"transaction",
								"{{TRXN_ID}}"
							]
						}
					},
					"response": []
				},
				{
					"name": "Retrieve Transaction",
					"protocolProfileBehavior": {
						"disableBodyPruning": true
					},
					"request": {
						"method": "GET",
						"header": [],
						"body": {
							"mode": "raw",
							"raw": "",
							"options": {
								"raw": {
									"language": "json"
								}
							}
						},
						"url": {
							"raw": "https://{{PROD_URL}}/api/rest/version/57/merchant/{{MID}}/order/{{ORDER_ID}}/transaction/{{TRXN_ID}}",
							"protocol": "https",
							"host": [
								"{{PROD_URL}}"
							],
							"path": [
								"api",
								"rest",
								"version",
								"57",
								"merchant",
								"{{MID}}",
								"order",
								"{{ORDER_ID}}",
								"transaction",
								"{{TRXN_ID}}"
							]
						}
					},
					"response": []
				},
				{
					"name": "Pay",
					"event": [
						{
							"listen": "prerequest",
							"script": {
								"exec": [
									""
								],
								"type": "text/javascript"
							}
						},
						{
							"listen": "test",
							"script": {
								"exec": [
									"var jsonData = JSON.parse(responseBody);",
									"postman.setEnvironmentVariable(\"ORDER_ID\", jsonData.order.id);",
									"postman.setEnvironmentVariable(\"TRXN_ID\", jsonData.transaction.id);",
									""
								],
								"type": "text/javascript"
							}
						}
					],
					"request": {
						"method": "PUT",
						"header": [
							{
								"key": "Content-Type",
								"name": "Content-Type",
								"type": "text",
								"value": "application/json"
							}
						],
						"body": {
							"mode": "raw",
							"raw": "{\n    \"apiOperation\": \"PAY\",\n    \"order\": {\n        \"amount\": 10,\n        \"currency\": \"EUR\",\n        \"reference\": \"{{$guid}}\"\n    },\n    \"authentication\": {\n    \t\"transactionId\": \"{{TRXN_ID}}\"\n    },\n    \"session\": {\n        \"id\": \"{{SESSION_ID}}\"\n    }\n}"
						},
						"url": {
							"raw": "https://{{PROD_URL}}/api/rest/version/57/merchant/{{MID}}/order/{{ORDER_ID}}/transaction/{{$guid}}",
							"protocol": "https",
							"host": [
								"{{PROD_URL}}"
							],
							"path": [
								"api",
								"rest",
								"version",
								"57",
								"merchant",
								"{{MID}}",
								"order",
								"{{ORDER_ID}}",
								"transaction",
								"{{$guid}}"
							]
						}
					},
					"response": []
				}
			],
			"event": [
				{
					"listen": "prerequest",
					"script": {
						"type": "text/javascript",
						"exec": [
							""
						]
					}
				},
				{
					"listen": "test",
					"script": {
						"type": "text/javascript",
						"exec": [
							""
						]
					}
				}
			]
		},
		{
			"name": "Tokenize card",
			"item": [
				{
					"name": "Create Session",
					"event": [
						{
							"listen": "test",
							"script": {
								"exec": [
									"var jsonData = JSON.parse(responseBody);",
									"postman.setEnvironmentVariable(\"SESSION_ID\", jsonData.session.id);",
									""
								],
								"type": "text/javascript"
							}
						}
					],
					"request": {
						"method": "POST",
						"header": [
							{
								"key": "Content-Type",
								"name": "Content-Type",
								"type": "text",
								"value": "application/json"
							}
						],
						"body": {
							"mode": "raw",
							"raw": "{\r\n    \"lineOfBusiness\": \"DONOTENFORCE\"\r\n}"
						},
						"url": {
							"raw": "https://{{PROD_URL}}/api/rest/version/57/merchant/{{MID}}/session",
							"protocol": "https",
							"host": [
								"{{PROD_URL}}"
							],
							"path": [
								"api",
								"rest",
								"version",
								"57",
								"merchant",
								"{{MID}}",
								"session"
							]
						}
					},
					"response": []
				},
				{
					"name": "Update Session",
					"event": [
						{
							"listen": "test",
							"script": {
								"exec": [
									"var jsonData = JSON.parse(responseBody);",
									"postman.setEnvironmentVariable(\"SESSION_ID\", jsonData.session.id);",
									""
								],
								"type": "text/javascript"
							}
						}
					],
					"request": {
						"method": "PUT",
						"header": [
							{
								"key": "Content-Type",
								"name": "Content-Type",
								"type": "text",
								"value": "application/json"
							}
						],
						"body": {
							"mode": "raw",
							"raw": "{\n    \"sourceOfFunds\": {\n        \"provided\": {\n            \"card\": {\n                \"expiry\": {\n                    \"month\": \"5\",\n                    \"year\": \"21\"\n                },\n                \"nameOnCard\": \"test\",\n                \"number\": \"5123450000000008\",\n                \"securityCode\": \"100\"\n            }\n        },\n        \"type\": \"CARD\"\n    }\n}\n"
						},
						"url": {
							"raw": "https://{{PROD_URL}}/api/rest/version/57/merchant/{{MID}}/session/{{SESSION_ID}}",
							"protocol": "https",
							"host": [
								"{{PROD_URL}}"
							],
							"path": [
								"api",
								"rest",
								"version",
								"57",
								"merchant",
								"{{MID}}",
								"session",
								"{{SESSION_ID}}"
							]
						}
					},
					"response": []
				},
				{
					"name": "Tokenize Card",
					"event": [
						{
							"listen": "prerequest",
							"script": {
								"exec": [
									""
								],
								"type": "text/javascript"
							}
						},
						{
							"listen": "test",
							"script": {
								"exec": [
									"var jsonData = JSON.parse(responseBody);",
									"postman.setEnvironmentVariable(\"TOKEN_ID\", jsonData.token);",
									""
								],
								"type": "text/javascript"
							}
						}
					],
					"request": {
						"method": "POST",
						"header": [
							{
								"key": "Content-Type",
								"name": "Content-Type",
								"value": "application/json",
								"type": "text"
							}
						],
						"body": {
							"mode": "raw",
							"raw": "{\n    \"sourceOfFunds\": {\n    \t\"type\": \"CARD\"\n    },\n    \"session\": {\n        \"id\": \"{{SESSION_ID}}\"\n    }\n}"
						},
						"url": {
							"raw": "https://{{PROD_URL}}/api/rest/version/57/merchant/{{MID}}/token",
							"protocol": "https",
							"host": [
								"{{PROD_URL}}"
							],
							"path": [
								"api",
								"rest",
								"version",
								"57",
								"merchant",
								"{{MID}}",
								"token"
							]
						}
					},
					"response": []
				}
			]
		},
		{
			"name": "One Step Payment - Pay - Recurring (NEW) - 3DS 2.0",
			"item": [
				{
					"name": "Create Session",
					"event": [
						{
							"listen": "test",
							"script": {
								"exec": [
									"var jsonData = JSON.parse(responseBody);",
									"postman.setEnvironmentVariable(\"SESSION_ID\", jsonData.session.id);",
									""
								],
								"type": "text/javascript"
							}
						}
					],
					"request": {
						"method": "POST",
						"header": [
							{
								"key": "Content-Type",
								"name": "Content-Type",
								"type": "text",
								"value": "application/json"
							}
						],
						"body": {
							"mode": "raw",
							"raw": "{\r\n    \"lineOfBusiness\": \"DONOTENFORCE\"\r\n}"
						},
						"url": {
							"raw": "https://{{PROD_URL}}/api/rest/version/57/merchant/{{MID}}/session",
							"protocol": "https",
							"host": [
								"{{PROD_URL}}"
							],
							"path": [
								"api",
								"rest",
								"version",
								"57",
								"merchant",
								"{{MID}}",
								"session"
							]
						}
					},
					"response": []
				},
				{
					"name": "Update Session with token",
					"event": [
						{
							"listen": "test",
							"script": {
								"exec": [
									"var jsonData = JSON.parse(responseBody);",
									"postman.setEnvironmentVariable(\"SESSION_ID\", jsonData.session.id);",
									"postman.setEnvironmentVariable(\"AGREEMENT_ID\", jsonData.agreement.id);",
									"postman.setEnvironmentVariable(\"ORDER_ID\", jsonData.order.id);",
									""
								],
								"type": "text/javascript"
							}
						}
					],
					"request": {
						"method": "PUT",
						"header": [
							{
								"key": "Content-Type",
								"name": "Content-Type",
								"type": "text",
								"value": "application/json"
							}
						],
						"body": {
							"mode": "raw",
							"raw": "{\n   \"sourceOfFunds\": {\n    \t\"token\": \"{{TOKEN_ID}}\",\n    \t\"provided\": {\n    \t\t\"card\": {\n    \t\t\t\"storedOnFile\": \"TO_BE_STORED\"\n    \t\t}\n    \t}\n    },\n    \"order\": {\n        \"id\": \"{{$guid}}\"\n    },\n    \"agreement\": {\n    \t\"id\": \"{{$guid}}\",\n    \t\"type\": \"RECURRING\"\n    }\n}"
						},
						"url": {
							"raw": "https://{{PROD_URL}}/api/rest/version/57/merchant/{{MID}}/session/{{SESSION_ID}}",
							"protocol": "https",
							"host": [
								"{{PROD_URL}}"
							],
							"path": [
								"api",
								"rest",
								"version",
								"57",
								"merchant",
								"{{MID}}",
								"session",
								"{{SESSION_ID}}"
							]
						}
					},
					"response": []
				},
				{
					"name": "Initiate Authentication",
					"event": [
						{
							"listen": "test",
							"script": {
								"exec": [
									"var jsonData = JSON.parse(responseBody);\r",
									"postman.setEnvironmentVariable(\"ORDER_ID\", jsonData.order.id);\r",
									"postman.setEnvironmentVariable(\"TRXN_ID\", jsonData.transaction.id);"
								],
								"type": "text/javascript"
							}
						}
					],
					"request": {
						"method": "PUT",
						"header": [
							{
								"key": "Content-Type",
								"name": "Content-Type",
								"type": "text",
								"value": "application/json"
							}
						],
						"body": {
							"mode": "raw",
							"raw": "{\n    \"apiOperation\": \"INITIATE_AUTHENTICATION\",\n    \"order\": {\n        \"currency\": \"EUR\"\n    },\n    \"session\": {\n        \"id\": \"{{SESSION_ID}}\"\n    },\n    \"authentication\": {\n        \"channel\": \"PAYER_BROWSER\",\n        \"purpose\": \"PAYMENT_TRANSACTION\",\n        \"acceptVersions\": \"3DS1,3DS2\"\n    }\n}"
						},
						"url": {
							"raw": "https://{{PROD_URL}}/api/rest/version/57/merchant/{{MID}}/order/{{ORDER_ID}}/transaction/{{$guid}}",
							"protocol": "https",
							"host": [
								"{{PROD_URL}}"
							],
							"path": [
								"api",
								"rest",
								"version",
								"57",
								"merchant",
								"{{MID}}",
								"order",
								"{{ORDER_ID}}",
								"transaction",
								"{{$guid}}"
							]
						}
					},
					"response": []
				},
				{
					"name": "Authenticate Payer",
					"event": [
						{
							"listen": "test",
							"script": {
								"exec": [
									""
								],
								"type": "text/javascript"
							}
						}
					],
					"request": {
						"method": "PUT",
						"header": [
							{
								"key": "Content-Type",
								"name": "Content-Type",
								"type": "text",
								"value": "application/json"
							}
						],
						"body": {
							"mode": "raw",
							"raw": "{\n    \"apiOperation\": \"AUTHENTICATE_PAYER\",\n    \"order\": {\n        \"currency\": \"EUR\",\n        \"amount\": 10\n    },\n    \"device\": {\n    \"browser\": \"CHROME\",\n    \"browserDetails\": {\n      \"3DSecureChallengeWindowSize\": \"FULL_SCREEN\",\n      \"acceptHeaders\": \"application/json\",\n      \"colorDepth\": 24,\n      \"javaEnabled\": true,\n      \"language\": \"en-US\",\n      \"screenHeight\": 960,\n      \"screenWidth\": 740,\n      \"timeZone\": -120\n    }\n    },\n    \"authentication\": {\n        \"redirectResponseUrl\": \"https://www.nbg.gr\"\n    },\n    \"session\": {\n        \"id\": \"{{SESSION_ID}}\"\n    }\n\n}"
						},
						"url": {
							"raw": "https://{{PROD_URL}}/api/rest/version/57/merchant/{{MID}}/order/{{ORDER_ID}}/transaction/{{TRXN_ID}}",
							"protocol": "https",
							"host": [
								"{{PROD_URL}}"
							],
							"path": [
								"api",
								"rest",
								"version",
								"57",
								"merchant",
								"{{MID}}",
								"order",
								"{{ORDER_ID}}",
								"transaction",
								"{{TRXN_ID}}"
							]
						}
					},
					"response": []
				},
				{
					"name": "Retrieve Transaction",
					"request": {
						"method": "GET",
						"header": [],
						"url": {
							"raw": "https://{{PROD_URL}}/api/rest/version/57/merchant/{{MID}}/order/{{ORDER_ID}}/transaction/{{TRXN_ID}}",
							"protocol": "https",
							"host": [
								"{{PROD_URL}}"
							],
							"path": [
								"api",
								"rest",
								"version",
								"57",
								"merchant",
								"{{MID}}",
								"order",
								"{{ORDER_ID}}",
								"transaction",
								"{{TRXN_ID}}"
							]
						}
					},
					"response": []
				},
				{
					"name": "Pay - Initial",
					"event": [
						{
							"listen": "prerequest",
							"script": {
								"exec": [
									""
								],
								"type": "text/javascript"
							}
						},
						{
							"listen": "test",
							"script": {
								"exec": [
									"var jsonData = JSON.parse(responseBody);",
									"postman.setEnvironmentVariable(\"ORDER_ID\", jsonData.order.id);",
									"postman.setEnvironmentVariable(\"AGREEMENT_ID\", jsonData.agreement.id);",
									"postman.setEnvironmentVariable(\"TRC_ID\", jsonData.transaction.acquirer.traceId);",
									""
								],
								"type": "text/javascript"
							}
						}
					],
					"request": {
						"method": "PUT",
						"header": [
							{
								"key": "Content-Type",
								"name": "Content-Type",
								"value": "application/json",
								"type": "text"
							}
						],
						"body": {
							"mode": "raw",
							"raw": "{\n    \"apiOperation\": \"PAY\",\n    \"order\": {\n        \"amount\": 10,\n        \"currency\": \"EUR\",\n        \"reference\": \"{{$guid}}\"\n    },\n    \"agreement\": {\n    \t\"id\": \"{{AGREEMENT_ID}}\",\n    \t\"type\": \"RECURRING\"\n    },\n    \"authentication\": {\n    \t\"transactionId\": \"{{TRXN_ID}}\"\n    },\n    \"transaction\": {\n    \t\"source\": \"INTERNET\"\n    },\n     \"session\": {\n        \"id\": \"{{SESSION_ID}}\"\n    }\n}"
						},
						"url": {
							"raw": "https://{{PROD_URL}}/api/rest/version/57/merchant/{{MID}}/order/{{ORDER_ID}}/transaction/{{$guid}}",
							"protocol": "https",
							"host": [
								"{{PROD_URL}}"
							],
							"path": [
								"api",
								"rest",
								"version",
								"57",
								"merchant",
								"{{MID}}",
								"order",
								"{{ORDER_ID}}",
								"transaction",
								"{{$guid}}"
							]
						}
					},
					"response": []
				},
				{
					"name": "Pay - Subsequent",
					"event": [
						{
							"listen": "prerequest",
							"script": {
								"exec": [
									""
								],
								"type": "text/javascript"
							}
						},
						{
							"listen": "test",
							"script": {
								"exec": [
									"var jsonData = JSON.parse(responseBody);",
									"postman.setEnvironmentVariable(\"ORDER_ID\", jsonData.order.id);",
									""
								],
								"type": "text/javascript"
							}
						}
					],
					"request": {
						"method": "PUT",
						"header": [
							{
								"key": "Content-Type",
								"name": "Content-Type",
								"type": "text",
								"value": "application/json"
							}
						],
						"body": {
							"mode": "raw",
							"raw": "{\n    \"apiOperation\": \"PAY\",\n    \"lineOfBusiness\": \"DONOTENFORCE\",\n    \"order\": {\n        \"amount\": 10,\n        \"currency\": \"EUR\",\n        \"reference\": \"{{$guid}}\"\n    },\n    \"sourceOfFunds\": {\n        \"token\": \"{{TOKEN_ID}}\",\n        \"provided\": {\n            \"card\": {\n                \"storedOnFile\": \"STORED\"\n            }\n        }\n    },\n    \"agreement\": {\n        \"id\": \"{{AGREEMENT_ID}}\"\n    },\n    \"transaction\": {\n        \"source\": \"MERCHANT\"\n    }\n}"
						},
						"url": {
							"raw": "https://{{PROD_URL}}/api/rest/version/57/merchant/{{MID}}/order/{{$guid}}/transaction/{{$guid}}",
							"protocol": "https",
							"host": [
								"{{PROD_URL}}"
							],
							"path": [
								"api",
								"rest",
								"version",
								"57",
								"merchant",
								"{{MID}}",
								"order",
								"{{$guid}}",
								"transaction",
								"{{$guid}}"
							]
						}
					},
					"response": []
				}
			],
			"event": [
				{
					"listen": "prerequest",
					"script": {
						"type": "text/javascript",
						"exec": [
							""
						]
					}
				},
				{
					"listen": "test",
					"script": {
						"type": "text/javascript",
						"exec": [
							""
						]
					}
				}
			]
		},
		{
			"name": "One Step Payment - Pay - Recurring (EXISTING) - 3DS 2.0",
			"item": [
				{
					"name": "Get token",
					"event": [
						{
							"listen": "prerequest",
							"script": {
								"exec": [
									""
								],
								"type": "text/javascript"
							}
						},
						{
							"listen": "test",
							"script": {
								"exec": [
									"var jsonData = JSON.parse(responseBody);",
									"postman.setEnvironmentVariable(\"TOKEN_ID\", jsonData.token);",
									""
								],
								"type": "text/javascript"
							}
						}
					],
					"request": {
						"method": "GET",
						"header": [
							{
								"key": "Content-Type",
								"name": "Content-Type",
								"value": "application/json",
								"type": "text"
							}
						],
						"url": {
							"raw": "https://{{PROD_URL}}/api/rest/version/57/merchant/{{MID}}/token/{{TOKEN_ID}}",
							"protocol": "https",
							"host": [
								"{{PROD_URL}}"
							],
							"path": [
								"api",
								"rest",
								"version",
								"57",
								"merchant",
								"{{MID}}",
								"token",
								"{{TOKEN_ID}}"
							]
						}
					},
					"response": []
				},
				{
					"name": "Pay - Initial - Mastercard",
					"event": [
						{
							"listen": "prerequest",
							"script": {
								"exec": [
									""
								],
								"type": "text/javascript"
							}
						},
						{
							"listen": "test",
							"script": {
								"exec": [
									"var jsonData = JSON.parse(responseBody);",
									"postman.setEnvironmentVariable(\"ORDER_ID\", jsonData.order.id);",
									"postman.setEnvironmentVariable(\"AGREEMENT_ID\", jsonData.agreement.id);",
									""
								],
								"type": "text/javascript"
							}
						}
					],
					"request": {
						"method": "PUT",
						"header": [
							{
								"key": "Content-Type",
								"name": "Content-Type",
								"value": "application/json",
								"type": "text"
							}
						],
						"body": {
							"mode": "raw",
							"raw": "{\n    \"apiOperation\": \"PAY\",\n    \"lineOfBusiness\": \"DONOTENFORCE\",\n    \"order\": {\n        \"amount\": 10,\n        \"currency\": \"EUR\",\n        \"reference\": \"{{$guid}}\"\n    },\n    \"sourceOfFunds\": {\n        \"token\": \"{{TOKEN_ID}}\",\n        \"provided\": {\n            \"card\": {\n                \"storedOnFile\": \"STORED\"\n            }\n        }\n    },\n    \"agreement\": {\n        \"id\": \"{{$guid}}\",\n        \"type\": \"UNSCHEDULED\"\n    },\n    \"transaction\": {\n        \"source\": \"MERCHANT\"\n    }\n}"
						},
						"url": {
							"raw": "https://{{PROD_URL}}/api/rest/version/57/merchant/{{MID}}/order/{{$guid}}/transaction/{{$guid}}",
							"protocol": "https",
							"host": [
								"{{PROD_URL}}"
							],
							"path": [
								"api",
								"rest",
								"version",
								"57",
								"merchant",
								"{{MID}}",
								"order",
								"{{$guid}}",
								"transaction",
								"{{$guid}}"
							]
						}
					},
					"response": []
				},
				{
					"name": "Pay - Initial - Visa",
					"event": [
						{
							"listen": "prerequest",
							"script": {
								"exec": [
									""
								],
								"type": "text/javascript"
							}
						},
						{
							"listen": "test",
							"script": {
								"exec": [
									"var jsonData = JSON.parse(responseBody);",
									"postman.setEnvironmentVariable(\"ORDER_ID\", jsonData.order.id);",
									"postman.setEnvironmentVariable(\"AGREEMENT_ID\", jsonData.agreement.id);",
									"postman.setEnvironmentVariable(\"TRC_ID\", jsonData.transaction.acquirer.traceId);",
									""
								],
								"type": "text/javascript"
							}
						}
					],
					"request": {
						"method": "PUT",
						"header": [
							{
								"key": "Content-Type",
								"name": "Content-Type",
								"value": "application/json",
								"type": "text"
							}
						],
						"body": {
							"mode": "raw",
							"raw": "{\n    \"apiOperation\": \"PAY\",\n    \"lineOfBusiness\": \"DONOTENFORCE\",\n    \"order\": {\n        \"amount\": 10,\n        \"currency\": \"EUR\",\n        \"reference\": \"{{$guid}}\"\n    },\n    \"sourceOfFunds\": {\n        \"token\": \"{{TOKEN_ID}}\",\n        \"provided\": {\n            \"card\": {\n                \"storedOnFile\": \"STORED\"\n            }\n        }\n    },\n    \"agreement\": {\n        \"id\": \"{{$guid}}\",\n        \"type\": \"UNSCHEDULED\"\n    },\n    \"transaction\": {\n        \"source\": \"MERCHANT\",\n        \"acquirer\": {\n            \"traceId\": \"887001863998888\"\n        }\n    }\n}"
						},
						"url": {
							"raw": "https://{{PROD_URL}}/api/rest/version/57/merchant/{{MID}}/order/{{$guid}}/transaction/{{$guid}}",
							"protocol": "https",
							"host": [
								"{{PROD_URL}}"
							],
							"path": [
								"api",
								"rest",
								"version",
								"57",
								"merchant",
								"{{MID}}",
								"order",
								"{{$guid}}",
								"transaction",
								"{{$guid}}"
							]
						}
					},
					"response": []
				},
				{
					"name": "Pay - Subsequent",
					"event": [
						{
							"listen": "prerequest",
							"script": {
								"exec": [
									""
								],
								"type": "text/javascript"
							}
						},
						{
							"listen": "test",
							"script": {
								"exec": [
									"var jsonData = JSON.parse(responseBody);",
									"postman.setEnvironmentVariable(\"ORDER_ID\", jsonData.order.id);",
									""
								],
								"type": "text/javascript"
							}
						}
					],
					"request": {
						"method": "PUT",
						"header": [
							{
								"key": "Content-Type",
								"name": "Content-Type",
								"type": "text",
								"value": "application/json"
							}
						],
						"body": {
							"mode": "raw",
							"raw": "{\n    \"apiOperation\": \"PAY\",\n    \"lineOfBusiness\": \"DONOTENFORCE\",\n    \"order\": {\n        \"amount\": 10,\n        \"currency\": \"EUR\",\n        \"reference\": \"{{$guid}}\"\n    },\n    \"sourceOfFunds\": {\n        \"token\": \"{{TOKEN_ID}}\",\n        \"provided\": {\n            \"card\": {\n                \"storedOnFile\": \"STORED\"\n            }\n        }\n    },\n    \"agreement\": {\n        \"id\": \"{{AGREEMENT_ID}}\"\n    },\n    \"transaction\": {\n        \"source\": \"MERCHANT\"\n    }\n}"
						},
						"url": {
							"raw": "https://{{PROD_URL}}/api/rest/version/57/merchant/{{MID}}/order/{{$guid}}/transaction/{{$guid}}",
							"protocol": "https",
							"host": [
								"{{PROD_URL}}"
							],
							"path": [
								"api",
								"rest",
								"version",
								"57",
								"merchant",
								"{{MID}}",
								"order",
								"{{$guid}}",
								"transaction",
								"{{$guid}}"
							]
						}
					},
					"response": []
				}
			],
			"event": [
				{
					"listen": "prerequest",
					"script": {
						"type": "text/javascript",
						"exec": [
							""
						]
					}
				},
				{
					"listen": "test",
					"script": {
						"type": "text/javascript",
						"exec": [
							""
						]
					}
				}
			]
		},
		{
			"name": "One Step Payment - Pay - Card On File - Customer initiated (one click payment) - 3DS 2.0",
			"item": [
				{
					"name": "Create Session",
					"event": [
						{
							"listen": "test",
							"script": {
								"exec": [
									"var jsonData = JSON.parse(responseBody);",
									"postman.setEnvironmentVariable(\"SESSION_ID\", jsonData.session.id);",
									""
								],
								"type": "text/javascript"
							}
						}
					],
					"request": {
						"method": "POST",
						"header": [
							{
								"key": "Content-Type",
								"name": "Content-Type",
								"type": "text",
								"value": "application/json"
							}
						],
						"body": {
							"mode": "raw",
							"raw": "{\r\n    \"lineOfBusiness\": \"DONOTENFORCE\"\r\n}"
						},
						"url": {
							"raw": "https://{{PROD_URL}}/api/rest/version/57/merchant/{{MID}}/session",
							"protocol": "https",
							"host": [
								"{{PROD_URL}}"
							],
							"path": [
								"api",
								"rest",
								"version",
								"57",
								"merchant",
								"{{MID}}",
								"session"
							]
						}
					},
					"response": []
				},
				{
					"name": "Update Session with token",
					"event": [
						{
							"listen": "test",
							"script": {
								"exec": [
									"var jsonData = JSON.parse(responseBody);",
									"postman.setEnvironmentVariable(\"SESSION_ID\", jsonData.session.id);",
									""
								],
								"type": "text/javascript"
							}
						}
					],
					"request": {
						"method": "PUT",
						"header": [
							{
								"key": "Content-Type",
								"name": "Content-Type",
								"type": "text",
								"value": "application/json"
							}
						],
						"body": {
							"mode": "raw",
							"raw": "{\n   \"sourceOfFunds\": {\n    \t\"token\": \"{{TOKEN_ID}}\",\n    \t\"provided\": {\n    \t\t\"card\": {\n    \t\t\t\"storedOnFile\": \"TO_BE_STORED\"\n    \t\t}\n    \t}\n    }\n}"
						},
						"url": {
							"raw": "https://{{PROD_URL}}/api/rest/version/57/merchant/{{MID}}/session/{{SESSION_ID}}",
							"protocol": "https",
							"host": [
								"{{PROD_URL}}"
							],
							"path": [
								"api",
								"rest",
								"version",
								"57",
								"merchant",
								"{{MID}}",
								"session",
								"{{SESSION_ID}}"
							]
						}
					},
					"response": []
				},
				{
					"name": "Initiate Authentication",
					"event": [
						{
							"listen": "test",
							"script": {
								"exec": [
									"var jsonData = JSON.parse(responseBody);\r",
									"postman.setEnvironmentVariable(\"ORDER_ID\", jsonData.order.id);\r",
									"postman.setEnvironmentVariable(\"TRXN_ID\", jsonData.transaction.id);"
								],
								"type": "text/javascript"
							}
						}
					],
					"request": {
						"method": "PUT",
						"header": [
							{
								"key": "Content-Type",
								"name": "Content-Type",
								"type": "text",
								"value": "application/json"
							}
						],
						"body": {
							"mode": "raw",
							"raw": "{\n    \"apiOperation\": \"INITIATE_AUTHENTICATION\",\n    \"order\": {\n        \"currency\": \"EUR\"\n    },\n    \"session\": {\n        \"id\": \"{{SESSION_ID}}\"\n    },\n    \"authentication\": {\n        \"channel\": \"PAYER_BROWSER\",\n        \"purpose\": \"PAYMENT_TRANSACTION\",\n        \"acceptVersions\": \"3DS1,3DS2\"\n    }\n}"
						},
						"url": {
							"raw": "https://{{PROD_URL}}/api/rest/version/57/merchant/{{MID}}/order/{{$guid}}/transaction/{{$guid}}",
							"protocol": "https",
							"host": [
								"{{PROD_URL}}"
							],
							"path": [
								"api",
								"rest",
								"version",
								"57",
								"merchant",
								"{{MID}}",
								"order",
								"{{$guid}}",
								"transaction",
								"{{$guid}}"
							]
						}
					},
					"response": []
				},
				{
					"name": "Authenticate Payer",
					"event": [
						{
							"listen": "test",
							"script": {
								"exec": [
									""
								],
								"type": "text/javascript"
							}
						}
					],
					"request": {
						"method": "PUT",
						"header": [
							{
								"key": "Content-Type",
								"name": "Content-Type",
								"type": "text",
								"value": "application/json"
							}
						],
						"body": {
							"mode": "raw",
							"raw": "{\n    \"apiOperation\": \"AUTHENTICATE_PAYER\",\n    \"order\": {\n        \"currency\": \"EUR\",\n        \"amount\": 10\n    },\n    \"device\": {\n    \"browser\": \"CHROME\",\n    \"browserDetails\": {\n      \"3DSecureChallengeWindowSize\": \"FULL_SCREEN\",\n      \"acceptHeaders\": \"application/json\",\n      \"colorDepth\": 24,\n      \"javaEnabled\": true,\n      \"language\": \"en-US\",\n      \"screenHeight\": 960,\n      \"screenWidth\": 740,\n      \"timeZone\": -120\n    }\n    },\n    \"authentication\": {\n        \"redirectResponseUrl\": \"https://www.nbg.gr\"\n    },\n    \"session\": {\n        \"id\": \"{{SESSION_ID}}\"\n    }\n\n}"
						},
						"url": {
							"raw": "https://{{PROD_URL}}/api/rest/version/57/merchant/{{MID}}/order/{{ORDER_ID}}/transaction/{{TRXN_ID}}",
							"protocol": "https",
							"host": [
								"{{PROD_URL}}"
							],
							"path": [
								"api",
								"rest",
								"version",
								"57",
								"merchant",
								"{{MID}}",
								"order",
								"{{ORDER_ID}}",
								"transaction",
								"{{TRXN_ID}}"
							]
						}
					},
					"response": []
				},
				{
					"name": "Retrieve Transaction",
					"request": {
						"method": "GET",
						"header": [],
						"url": {
							"raw": "https://{{PROD_URL}}/api/rest/version/57/merchant/{{MID}}/order/{{ORDER_ID}}/transaction/{{TRXN_ID}}",
							"protocol": "https",
							"host": [
								"{{PROD_URL}}"
							],
							"path": [
								"api",
								"rest",
								"version",
								"57",
								"merchant",
								"{{MID}}",
								"order",
								"{{ORDER_ID}}",
								"transaction",
								"{{TRXN_ID}}"
							]
						}
					},
					"response": []
				},
				{
					"name": "Pay",
					"event": [
						{
							"listen": "prerequest",
							"script": {
								"exec": [
									""
								],
								"type": "text/javascript"
							}
						},
						{
							"listen": "test",
							"script": {
								"exec": [
									"var jsonData = JSON.parse(responseBody);",
									"postman.setEnvironmentVariable(\"ORDER_ID\", jsonData.order.id);",
									"postman.setEnvironmentVariable(\"AGREEMENT_ID\", jsonData.agreement.id);",
									"postman.setEnvironmentVariable(\"TRC_ID\", jsonData.transaction.acquirer.traceId);",
									""
								],
								"type": "text/javascript"
							}
						}
					],
					"request": {
						"method": "PUT",
						"header": [
							{
								"key": "Content-Type",
								"name": "Content-Type",
								"value": "application/json",
								"type": "text"
							}
						],
						"body": {
							"mode": "raw",
							"raw": "{\n    \"apiOperation\": \"PAY\",\n    \"order\": {\n        \"amount\": 10,\n        \"currency\": \"EUR\",\n        \"reference\": \"{{$guid}}\"\n    },\n    \"authentication\": {\n    \t\"transactionId\": \"{{TRXN_ID}}\"\n    },\n    \"transaction\": {\n    \t\"source\": \"INTERNET\"\n    },\n     \"session\": {\n        \"id\": \"{{SESSION_ID}}\"\n    }\n}"
						},
						"url": {
							"raw": "https://{{PROD_URL}}/api/rest/version/57/merchant/{{MID}}/order/{{ORDER_ID}}/transaction/{{$guid}}",
							"protocol": "https",
							"host": [
								"{{PROD_URL}}"
							],
							"path": [
								"api",
								"rest",
								"version",
								"57",
								"merchant",
								"{{MID}}",
								"order",
								"{{ORDER_ID}}",
								"transaction",
								"{{$guid}}"
							]
						}
					},
					"response": []
				}
			],
			"event": [
				{
					"listen": "prerequest",
					"script": {
						"type": "text/javascript",
						"exec": [
							""
						]
					}
				},
				{
					"listen": "test",
					"script": {
						"type": "text/javascript",
						"exec": [
							""
						]
					}
				}
			]
		},
		{
			"name": "Two Step Payment - 3DS 2.0 - Installments",
			"item": [
				{
					"name": "Create Session",
					"event": [
						{
							"listen": "test",
							"script": {
								"exec": [
									"var jsonData = JSON.parse(responseBody);",
									"postman.setEnvironmentVariable(\"SESSION_ID\", jsonData.session.id);",
									""
								],
								"type": "text/javascript"
							}
						}
					],
					"request": {
						"method": "POST",
						"header": [
							{
								"key": "Content-Type",
								"name": "Content-Type",
								"type": "text",
								"value": "application/json"
							}
						],
						"body": {
							"mode": "raw",
							"raw": "{\r\n    \"lineOfBusiness\": \"ENFORCE\"\r\n}"
						},
						"url": {
							"raw": "https://{{PROD_URL}}/api/rest/version/57/merchant/{{MID}}/session",
							"protocol": "https",
							"host": [
								"{{PROD_URL}}"
							],
							"path": [
								"api",
								"rest",
								"version",
								"57",
								"merchant",
								"{{MID}}",
								"session"
							]
						}
					},
					"response": []
				},
				{
					"name": "Update Session",
					"event": [
						{
							"listen": "test",
							"script": {
								"exec": [
									"var jsonData = JSON.parse(responseBody);",
									"postman.setEnvironmentVariable(\"SESSION_ID\", jsonData.session.id);",
									""
								],
								"type": "text/javascript"
							}
						}
					],
					"request": {
						"method": "PUT",
						"header": [
							{
								"key": "Content-Type",
								"name": "Content-Type",
								"type": "text",
								"value": "application/json"
							}
						],
						"body": {
							"mode": "raw",
							"raw": "{\n    \"sourceOfFunds\": {\n        \"provided\": {\n            \"card\": {\n                \"expiry\": {\n                    \"month\": \"05\",\n                    \"year\": \"25\"\n                },\n                \"nameOnCard\": \"test\",\n                \"number\": \"5278900020308586\",\n                \"securityCode\": \"123\"\n            }\n        },\n        \"type\": \"CARD\"\n    }\n}\n"
						},
						"url": {
							"raw": "https://{{PROD_URL}}/api/rest/version/57/merchant/{{MID}}/session/{{SESSION_ID}}",
							"protocol": "https",
							"host": [
								"{{PROD_URL}}"
							],
							"path": [
								"api",
								"rest",
								"version",
								"57",
								"merchant",
								"{{MID}}",
								"session",
								"{{SESSION_ID}}"
							]
						}
					},
					"response": []
				},
				{
					"name": "Initiate Authentication",
					"event": [
						{
							"listen": "test",
							"script": {
								"exec": [
									"var jsonData = JSON.parse(responseBody);\r",
									"postman.setEnvironmentVariable(\"ORDER_ID\", jsonData.order.id);\r",
									"postman.setEnvironmentVariable(\"TRXN_ID\", jsonData.transaction.id);"
								],
								"type": "text/javascript"
							}
						}
					],
					"request": {
						"method": "PUT",
						"header": [
							{
								"key": "Content-Type",
								"name": "Content-Type",
								"type": "text",
								"value": "application/json"
							}
						],
						"body": {
							"mode": "raw",
							"raw": "{\n    \"apiOperation\": \"INITIATE_AUTHENTICATION\",\n    \"order\": {\n        \"currency\": \"EUR\"\n    },\n    \"session\": {\n        \"id\": \"{{SESSION_ID}}\"\n    },\n    \"authentication\": {\n        \"channel\": \"PAYER_BROWSER\",\n        \"purpose\": \"PAYMENT_TRANSACTION\",\n        \"acceptVersions\": \"3DS1,3DS2\"\n    }\n}"
						},
						"url": {
							"raw": "https://{{PROD_URL}}/api/rest/version/57/merchant/{{MID}}/order/{{$guid}}/transaction/{{$guid}}",
							"protocol": "https",
							"host": [
								"{{PROD_URL}}"
							],
							"path": [
								"api",
								"rest",
								"version",
								"57",
								"merchant",
								"{{MID}}",
								"order",
								"{{$guid}}",
								"transaction",
								"{{$guid}}"
							]
						}
					},
					"response": []
				},
				{
					"name": "Authenticate Payer",
					"event": [
						{
							"listen": "test",
							"script": {
								"exec": [
									"var jsonData = JSON.parse(responseBody);\r",
									"postman.setEnvironmentVariable(\"TRXN_ID\", jsonData.transaction.id);"
								],
								"type": "text/javascript"
							}
						}
					],
					"request": {
						"method": "PUT",
						"header": [
							{
								"key": "Content-Type",
								"name": "Content-Type",
								"type": "text",
								"value": "application/json"
							}
						],
						"body": {
							"mode": "raw",
							"raw": "{\n    \"apiOperation\": \"AUTHENTICATE_PAYER\",\n    \"order\": {\n        \"currency\": \"EUR\",\n        \"amount\": 50\n    },\n    \"device\": {\n    \"browser\": \"CHROME\",\n    \"browserDetails\": {\n      \"3DSecureChallengeWindowSize\": \"FULL_SCREEN\",\n      \"acceptHeaders\": \"application/json\",\n      \"colorDepth\": 24,\n      \"javaEnabled\": true,\n      \"language\": \"en-US\",\n      \"screenHeight\": 960,\n      \"screenWidth\": 740,\n      \"timeZone\": -120\n    }\n    },\n    \"authentication\": {\n        \"redirectResponseUrl\": \"https://www.nbg.gr\"\n    },\n    \"session\": {\n        \"id\": \"{{SESSION_ID}}\"\n    }\n\n}"
						},
						"url": {
							"raw": "https://{{PROD_URL}}/api/rest/version/57/merchant/{{MID}}/order/{{ORDER_ID}}/transaction/{{TRXN_ID}}",
							"protocol": "https",
							"host": [
								"{{PROD_URL}}"
							],
							"path": [
								"api",
								"rest",
								"version",
								"57",
								"merchant",
								"{{MID}}",
								"order",
								"{{ORDER_ID}}",
								"transaction",
								"{{TRXN_ID}}"
							]
						}
					},
					"response": []
				},
				{
					"name": "Retrieve Transaction",
					"protocolProfileBehavior": {
						"disableBodyPruning": true
					},
					"request": {
						"method": "GET",
						"header": [],
						"body": {
							"mode": "raw",
							"raw": "",
							"options": {
								"raw": {
									"language": "json"
								}
							}
						},
						"url": {
							"raw": "https://{{PROD_URL}}/api/rest/version/57/merchant/{{MID}}/order/{{ORDER_ID}}/transaction/{{TRXN_ID}}",
							"protocol": "https",
							"host": [
								"{{PROD_URL}}"
							],
							"path": [
								"api",
								"rest",
								"version",
								"57",
								"merchant",
								"{{MID}}",
								"order",
								"{{ORDER_ID}}",
								"transaction",
								"{{TRXN_ID}}"
							]
						}
					},
					"response": []
				},
				{
					"name": "Authorize",
					"event": [
						{
							"listen": "prerequest",
							"script": {
								"exec": [
									""
								],
								"type": "text/javascript"
							}
						},
						{
							"listen": "test",
							"script": {
								"exec": [
									"var jsonData = JSON.parse(responseBody);",
									"postman.setEnvironmentVariable(\"ORDER_ID\", jsonData.order.id);",
									""
								],
								"type": "text/javascript"
							}
						}
					],
					"request": {
						"method": "PUT",
						"header": [
							{
								"key": "Content-Type",
								"name": "Content-Type",
								"type": "text",
								"value": "application/json"
							}
						],
						"body": {
							"mode": "raw",
							"raw": "{\n    \"apiOperation\": \"AUTHORIZE\",\n    \"order\": {\n        \"amount\": 50,\n        \"currency\": \"EUR\",\n        \"reference\": \"{{$guid}}\",\n        \"certainty\": \"ESTIMATED\"\n    },\n    \"authentication\": {\n    \t\"transactionId\": \"{{TRXN_ID}}\"\n    },\n    \"paymentPlan\": {\n    \t\"numberOfDeferrals\": 0,\n    \t\"numberOfPayments\": 6,\n    \t\"planId\": \"NBG\"\n    },\n    \"session\": {\n        \"id\": \"{{SESSION_ID}}\"\n    }\n}"
						},
						"url": {
							"raw": "https://{{PROD_URL}}/api/rest/version/57/merchant/{{MID}}/order/{{ORDER_ID}}/transaction/{{$guid}}",
							"protocol": "https",
							"host": [
								"{{PROD_URL}}"
							],
							"path": [
								"api",
								"rest",
								"version",
								"57",
								"merchant",
								"{{MID}}",
								"order",
								"{{ORDER_ID}}",
								"transaction",
								"{{$guid}}"
							]
						}
					},
					"response": []
				},
				{
					"name": "Capture",
					"request": {
						"method": "PUT",
						"header": [
							{
								"key": "Content-Type",
								"name": "Content-Type",
								"value": "application/json",
								"type": "text"
							}
						],
						"body": {
							"mode": "raw",
							"raw": "{\n    \"apiOperation\": \"CAPTURE\",\n    \"transaction\": {\n    \t\"amount\": 50,\n        \"currency\": \"EUR\"\n    }\n}"
						},
						"url": {
							"raw": "https://{{PROD_URL}}/api/rest/version/57/merchant/{{MID}}/order/{{ORDER_ID}}/transaction/{{$guid}}",
							"protocol": "https",
							"host": [
								"{{PROD_URL}}"
							],
							"path": [
								"api",
								"rest",
								"version",
								"57",
								"merchant",
								"{{MID}}",
								"order",
								"{{ORDER_ID}}",
								"transaction",
								"{{$guid}}"
							]
						}
					},
					"response": []
				}
			]
		},
		{
			"name": "Hosted Checkout",
			"item": [
				{
					"name": "One Click Payments - Customer Initiated",
					"item": [
						{
							"name": "First Payment",
							"item": [
								{
									"name": "Create Checkout Session",
									"event": [
										{
											"listen": "test",
											"script": {
												"exec": [
													"var jsonData = JSON.parse(responseBody);",
													"postman.setEnvironmentVariable(\"SESSION_ID\", jsonData.session.id);",
													""
												],
												"type": "text/javascript"
											}
										}
									],
									"request": {
										"method": "POST",
										"header": [
											{
												"key": "Content-Type",
												"name": "Content-Type",
												"type": "text",
												"value": "application/json; charset=UTF-8"
											}
										],
										"body": {
											"mode": "raw",
											"raw": "{\r\n    \"apiOperation\": \"CREATE_CHECKOUT_SESSION\",\r\n    \"lineOfBusiness\": \"ENFORCE\",\r\n    \"order\": {\r\n        \"amount\": 50,\r\n        \"currency\": \"EUR\",\r\n        \"id\": \"{{$guid}}\",\r\n        \"description\": \"Test order\",\r\n        \"reference\": \"{{$guid}}\"\r\n    },\r\n    \"interaction\": {\r\n        \"operation\": \"PURCHASE\",\r\n        \"merchant\": {\r\n            \"name\": \"TEST\"\r\n        },\r\n        \"cancelUrl\": \"https://www.nbg.com/cancel\",\r\n        \"returnUrl\": \"https://www.nbg.com/complete\",\r\n        \"displayControl\": {\r\n            \"billingAddress\": \"HIDE\"\r\n        }        \r\n    }\r\n}"
										},
										"url": {
											"raw": "https://{{PROD_URL}}/api/rest/version/57/merchant/{{MID}}/session",
											"protocol": "https",
											"host": [
												"{{PROD_URL}}"
											],
											"path": [
												"api",
												"rest",
												"version",
												"57",
												"merchant",
												"{{MID}}",
												"session"
											]
										}
									},
									"response": []
								},
								{
									"name": "Tokenize Card (After successful payment through checkout)",
									"event": [
										{
											"listen": "prerequest",
											"script": {
												"exec": [
													""
												],
												"type": "text/javascript"
											}
										},
										{
											"listen": "test",
											"script": {
												"exec": [
													"var jsonData = JSON.parse(responseBody);",
													"postman.setEnvironmentVariable(\"TOKEN_ID\", jsonData.token);",
													""
												],
												"type": "text/javascript"
											}
										}
									],
									"request": {
										"method": "POST",
										"header": [
											{
												"key": "Content-Type",
												"name": "Content-Type",
												"value": "application/json",
												"type": "text"
											}
										],
										"body": {
											"mode": "raw",
											"raw": "{\n    \"sourceOfFunds\": {\n    \t\"type\": \"CARD\"\n    },\n    \"session\": {\n        \"id\": \"{{SESSION_ID}}\"\n    }\n}"
										},
										"url": {
											"raw": "https://{{PROD_URL}}/api/rest/version/57/merchant/{{MID}}/token",
											"protocol": "https",
											"host": [
												"{{PROD_URL}}"
											],
											"path": [
												"api",
												"rest",
												"version",
												"57",
												"merchant",
												"{{MID}}",
												"token"
											]
										}
									},
									"response": []
								}
							]
						},
						{
							"name": "Payment with token",
							"item": [
								{
									"name": "Create Session",
									"event": [
										{
											"listen": "test",
											"script": {
												"exec": [
													"var jsonData = JSON.parse(responseBody);",
													"postman.setEnvironmentVariable(\"SESSION_ID\", jsonData.session.id);",
													""
												],
												"type": "text/javascript"
											}
										}
									],
									"request": {
										"method": "POST",
										"header": [
											{
												"key": "Content-Type",
												"name": "Content-Type",
												"type": "text",
												"value": "application/json"
											}
										],
										"body": {
											"mode": "raw",
											"raw": "{\r\n    \"lineOfBusiness\": \"DONOTENFORCE\"\r\n}"
										},
										"url": {
											"raw": "https://{{PROD_URL}}/api/rest/version/57/merchant/{{MID}}/session",
											"protocol": "https",
											"host": [
												"{{PROD_URL}}"
											],
											"path": [
												"api",
												"rest",
												"version",
												"57",
												"merchant",
												"{{MID}}",
												"session"
											]
										}
									},
									"response": []
								},
								{
									"name": "Update Session with token",
									"event": [
										{
											"listen": "test",
											"script": {
												"exec": [
													"var jsonData = JSON.parse(responseBody);",
													"postman.setEnvironmentVariable(\"SESSION_ID\", jsonData.session.id);",
													""
												],
												"type": "text/javascript"
											}
										}
									],
									"request": {
										"method": "PUT",
										"header": [
											{
												"key": "Content-Type",
												"name": "Content-Type",
												"type": "text",
												"value": "application/json"
											}
										],
										"body": {
											"mode": "raw",
											"raw": "{\n   \"sourceOfFunds\": {\n    \t\"token\": \"{{TOKEN_ID}}\",\n    \t\"provided\": {\n    \t\t\"card\": {\n    \t\t\t\"storedOnFile\": \"STORED\"\n    \t\t}\n    \t}\n    }\n}"
										},
										"url": {
											"raw": "https://{{PROD_URL}}/api/rest/version/57/merchant/{{MID}}/session/{{SESSION_ID}}",
											"protocol": "https",
											"host": [
												"{{PROD_URL}}"
											],
											"path": [
												"api",
												"rest",
												"version",
												"57",
												"merchant",
												"{{MID}}",
												"session",
												"{{SESSION_ID}}"
											]
										}
									},
									"response": []
								},
								{
									"name": "Initiate Authentication",
									"event": [
										{
											"listen": "test",
											"script": {
												"exec": [
													"var jsonData = JSON.parse(responseBody);\r",
													"postman.setEnvironmentVariable(\"ORDER_ID\", jsonData.order.id);\r",
													"postman.setEnvironmentVariable(\"TRXN_ID\", jsonData.transaction.id);"
												],
												"type": "text/javascript"
											}
										}
									],
									"request": {
										"method": "PUT",
										"header": [
											{
												"key": "Content-Type",
												"name": "Content-Type",
												"type": "text",
												"value": "application/json"
											}
										],
										"body": {
											"mode": "raw",
											"raw": "{\n    \"apiOperation\": \"INITIATE_AUTHENTICATION\",\n    \"order\": {\n        \"currency\": \"EUR\"\n    },\n    \"session\": {\n        \"id\": \"{{SESSION_ID}}\"\n    },\n    \"authentication\": {\n        \"channel\": \"PAYER_BROWSER\",\n        \"purpose\": \"PAYMENT_TRANSACTION\",\n        \"acceptVersions\": \"3DS1,3DS2\"\n    }\n}"
										},
										"url": {
											"raw": "https://{{PROD_URL}}/api/rest/version/57/merchant/{{MID}}/order/{{$guid}}/transaction/{{$guid}}",
											"protocol": "https",
											"host": [
												"{{PROD_URL}}"
											],
											"path": [
												"api",
												"rest",
												"version",
												"57",
												"merchant",
												"{{MID}}",
												"order",
												"{{$guid}}",
												"transaction",
												"{{$guid}}"
											]
										}
									},
									"response": []
								},
								{
									"name": "Authenticate Payer",
									"event": [
										{
											"listen": "test",
											"script": {
												"exec": [
													""
												],
												"type": "text/javascript"
											}
										}
									],
									"request": {
										"method": "PUT",
										"header": [
											{
												"key": "Content-Type",
												"name": "Content-Type",
												"type": "text",
												"value": "application/json"
											}
										],
										"body": {
											"mode": "raw",
											"raw": "{\n    \"apiOperation\": \"AUTHENTICATE_PAYER\",\n    \"order\": {\n        \"currency\": \"EUR\",\n        \"amount\": 20\n    },\n    \"device\": {\n    \"browser\": \"CHROME\",\n    \"browserDetails\": {\n      \"3DSecureChallengeWindowSize\": \"FULL_SCREEN\",\n      \"acceptHeaders\": \"application/json\",\n      \"colorDepth\": 24,\n      \"javaEnabled\": true,\n      \"language\": \"en-US\",\n      \"screenHeight\": 960,\n      \"screenWidth\": 740,\n      \"timeZone\": 273\n    }\n    },\n    \"authentication\": {\n        \"redirectResponseUrl\": \"https://www.nbg.gr\"\n    },\n    \"session\": {\n        \"id\": \"{{SESSION_ID}}\"\n    }\n\n}"
										},
										"url": {
											"raw": "https://{{PROD_URL}}/api/rest/version/57/merchant/{{MID}}/order/{{ORDER_ID}}/transaction/{{TRXN_ID}}",
											"protocol": "https",
											"host": [
												"{{PROD_URL}}"
											],
											"path": [
												"api",
												"rest",
												"version",
												"57",
												"merchant",
												"{{MID}}",
												"order",
												"{{ORDER_ID}}",
												"transaction",
												"{{TRXN_ID}}"
											]
										}
									},
									"response": []
								},
								{
									"name": "Pay",
									"event": [
										{
											"listen": "prerequest",
											"script": {
												"exec": [
													""
												],
												"type": "text/javascript"
											}
										},
										{
											"listen": "test",
											"script": {
												"exec": [
													"var jsonData = JSON.parse(responseBody);",
													"postman.setEnvironmentVariable(\"ORDER_ID\", jsonData.order.id);",
													""
												],
												"type": "text/javascript"
											}
										}
									],
									"request": {
										"method": "PUT",
										"header": [
											{
												"key": "Content-Type",
												"name": "Content-Type",
												"type": "text",
												"value": "application/json; charset=UTF-8"
											}
										],
										"body": {
											"mode": "raw",
											"raw": "{\n    \"apiOperation\": \"PAY\",\n    \"order\": {\n        \"amount\": 20,\n        \"currency\": \"EUR\",\n        \"reference\": \"{{$guid}}\"\n    },\n    \"authentication\": {\n    \t\"transactionId\": \"{{TRXN_ID}}\"\n    },\n    \"transaction\": {\n        \"source\": \"INTERNET\"\n    },\n    \"session\": {\n        \"id\": \"{{SESSION_ID}}\"\n    }\n}"
										},
										"url": {
											"raw": "https://{{PROD_URL}}/api/rest/version/57/merchant/{{MID}}/order/{{ORDER_ID}}/transaction/{{$guid}}",
											"protocol": "https",
											"host": [
												"{{PROD_URL}}"
											],
											"path": [
												"api",
												"rest",
												"version",
												"57",
												"merchant",
												"{{MID}}",
												"order",
												"{{ORDER_ID}}",
												"transaction",
												"{{$guid}}"
											]
										}
									},
									"response": []
								}
							]
						}
					]
				},
				{
					"name": "Recurring Payments",
					"item": [
						{
							"name": "Initial Payment",
							"item": [
								{
									"name": "Create Checkout Session",
									"event": [
										{
											"listen": "test",
											"script": {
												"exec": [
													"var jsonData = JSON.parse(responseBody);",
													"postman.setEnvironmentVariable(\"SESSION_ID\", jsonData.session.id);",
													""
												],
												"type": "text/javascript"
											}
										}
									],
									"request": {
										"method": "POST",
										"header": [
											{
												"key": "Content-Type",
												"name": "Content-Type",
												"type": "text",
												"value": "application/json; charset=UTF-8"
											}
										],
										"body": {
											"mode": "raw",
											"raw": "{\r\n    \"apiOperation\": \"CREATE_CHECKOUT_SESSION\",\r\n    \"lineOfBusiness\": \"ENFORCE\",\r\n    \"order\": {\r\n        \"amount\": 50,\r\n        \"currency\": \"EUR\",\r\n        \"id\": \"{{$guid}}\",\r\n        \"description\": \"Initia payment\",\r\n        \"reference\": \"{{$guid}}\"\r\n    },\r\n    \"interaction\": {\r\n        \"operation\": \"PURCHASE\",\r\n        \"merchant\": {\r\n            \"name\": \"TEST\"\r\n        },\r\n        \"cancelUrl\": \"https://www.nbg.com/cancel\",\r\n        \"displayControl\": {\r\n            \"billingAddress\": \"HIDE\"\r\n        }        \r\n    },\r\n    \"agreement\": {\r\n        \"type\": \"RECURRING\",\r\n        \"id\": \"{{$guid}}\"\r\n    }\r\n}"
										},
										"url": {
											"raw": "https://{{PROD_URL}}/api/rest/version/57/merchant/{{MID}}/session",
											"protocol": "https",
											"host": [
												"{{PROD_URL}}"
											],
											"path": [
												"api",
												"rest",
												"version",
												"57",
												"merchant",
												"{{MID}}",
												"session"
											]
										}
									},
									"response": []
								},
								{
									"name": "Tokenize Card (After successful payment through checkout)",
									"event": [
										{
											"listen": "prerequest",
											"script": {
												"exec": [
													""
												],
												"type": "text/javascript"
											}
										},
										{
											"listen": "test",
											"script": {
												"exec": [
													"var jsonData = JSON.parse(responseBody);",
													"postman.setEnvironmentVariable(\"TOKEN_ID\", jsonData.token);",
													""
												],
												"type": "text/javascript"
											}
										}
									],
									"request": {
										"method": "POST",
										"header": [
											{
												"key": "Content-Type",
												"name": "Content-Type",
												"value": "application/json",
												"type": "text"
											}
										],
										"body": {
											"mode": "raw",
											"raw": "{\n    \"sourceOfFunds\": {\n    \t\"type\": \"CARD\"\n    },\n    \"session\": {\n        \"id\": \"{{SESSION_ID}}\"\n    }\n}"
										},
										"url": {
											"raw": "https://{{PROD_URL}}/api/rest/version/57/merchant/{{MID}}/token",
											"protocol": "https",
											"host": [
												"{{PROD_URL}}"
											],
											"path": [
												"api",
												"rest",
												"version",
												"57",
												"merchant",
												"{{MID}}",
												"token"
											]
										}
									},
									"response": []
								}
							]
						},
						{
							"name": "Pay - Subsequent Payments",
							"event": [
								{
									"listen": "prerequest",
									"script": {
										"exec": [
											""
										],
										"type": "text/javascript"
									}
								},
								{
									"listen": "test",
									"script": {
										"exec": [
											"var jsonData = JSON.parse(responseBody);",
											"postman.setEnvironmentVariable(\"ORDER_ID\", jsonData.order.id);",
											""
										],
										"type": "text/javascript"
									}
								}
							],
							"request": {
								"method": "PUT",
								"header": [
									{
										"key": "Content-Type",
										"name": "Content-Type",
										"type": "text",
										"value": "application/json"
									}
								],
								"body": {
									"mode": "raw",
									"raw": "{\n    \"apiOperation\": \"PAY\",\n    \"lineOfBusiness\": \"DONOTENFORCE\",\n    \"order\": {\n        \"amount\": 1,\n        \"currency\": \"EUR\",\n        \"reference\": \"{{$guid}}\"\n    },\n    \"sourceOfFunds\": {\n        \"token\": \"{{TOKEN_ID}}\",\n        \"provided\": {\n            \"card\": {\n                \"storedOnFile\": \"STORED\"\n            }\n        }\n    },\n    \"agreement\": {\n        \"id\": \"{{AGREEMENT_ID}}\"\n    },\n    \"transaction\": {\n        \"source\": \"MERCHANT\"\n    }\n}"
								},
								"url": {
									"raw": "https://{{PROD_URL}}/api/rest/version/57/merchant/{{MID}}/order/{{$guid}}/transaction/{{$guid}}",
									"protocol": "https",
									"host": [
										"{{PROD_URL}}"
									],
									"path": [
										"api",
										"rest",
										"version",
										"57",
										"merchant",
										"{{MID}}",
										"order",
										"{{$guid}}",
										"transaction",
										"{{$guid}}"
									]
								}
							},
							"response": []
						}
					]
				},
				{
					"name": "Two Step Payment - Installments",
					"item": [
						{
							"name": "Create Checkout Session",
							"event": [
								{
									"listen": "test",
									"script": {
										"exec": [
											"var jsonData = JSON.parse(responseBody);",
											"postman.setEnvironmentVariable(\"SESSION_ID\", jsonData.session.id);",
											""
										],
										"type": "text/javascript"
									}
								}
							],
							"request": {
								"method": "POST",
								"header": [
									{
										"key": "Content-Type",
										"name": "Content-Type",
										"type": "text",
										"value": "application/json"
									}
								],
								"body": {
									"mode": "raw",
									"raw": "{\r\n    \"apiOperation\": \"CREATE_CHECKOUT_SESSION\",\r\n    \"lineOfBusiness\": \"ENFORCE\",\r\n    \"order\": {\r\n        \"amount\": 50,\r\n        \"currency\": \"EUR\",\r\n        \"description\": \"Order payment\",\r\n        \"id\": \"{{$guid}}\",\r\n        \"reference\": \"{{$guid}}\",\r\n        \"certainty\": \"ESTIMATED\"\r\n    },\r\n    \"interaction\": {\r\n        \"operation\": \"AUTHORIZE\",\r\n        \"merchant\": {\r\n            \"name\": \"TEST\"\r\n        },\r\n        \"returnUrl\": \"https://www.nbg.com/complete\",\r\n        \"cancelUrl\": \"https://www.nbg.com/cancel\",\r\n        \"displayControl\": {\r\n            \"billingAddress\": \"HIDE\"\r\n        }\r\n    }\r\n}"
								},
								"url": {
									"raw": "https://{{PROD_URL}}/api/rest/version/57/merchant/{{MID}}/session",
									"protocol": "https",
									"host": [
										"{{PROD_URL}}"
									],
									"path": [
										"api",
										"rest",
										"version",
										"57",
										"merchant",
										"{{MID}}",
										"session"
									]
								}
							},
							"response": []
						},
						{
							"name": "Capture",
							"request": {
								"method": "PUT",
								"header": [
									{
										"key": "Content-Type",
										"name": "Content-Type",
										"type": "text",
										"value": "application/json"
									}
								],
								"body": {
									"mode": "raw",
									"raw": "{\n    \"apiOperation\": \"CAPTURE\",\n    \"transaction\": {\n    \t\"amount\": 50,\n        \"currency\": \"EUR\"\n    }\n}"
								},
								"url": {
									"raw": "https://{{PROD_URL}}/api/rest/version/57/merchant/{{MID}}/order/{{ORDER_ID}}/transaction/{{$guid}}",
									"protocol": "https",
									"host": [
										"{{PROD_URL}}"
									],
									"path": [
										"api",
										"rest",
										"version",
										"57",
										"merchant",
										"{{MID}}",
										"order",
										"{{ORDER_ID}}",
										"transaction",
										"{{$guid}}"
									]
								}
							},
							"response": []
						}
					]
				},
				{
					"name": "One Step Payment",
					"item": [
						{
							"name": "Create Checkout Session",
							"event": [
								{
									"listen": "test",
									"script": {
										"exec": [
											"var jsonData = JSON.parse(responseBody);",
											"postman.setEnvironmentVariable(\"SESSION_ID\", jsonData.session.id);",
											""
										],
										"type": "text/javascript"
									}
								}
							],
							"request": {
								"method": "POST",
								"header": [
									{
										"key": "Content-Type",
										"name": "Content-Type",
										"type": "text",
										"value": "application/json"
									}
								],
								"body": {
									"mode": "raw",
									"raw": "{\r\n    \"apiOperation\": \"CREATE_CHECKOUT_SESSION\",\r\n    \"lineOfBusiness\": \"ENFORCE\",\r\n    \"order\": {\r\n        \"amount\": 50,\r\n        \"currency\": \"EUR\",\r\n        \"description\": \"Order payment\",\r\n        \"id\": \"{{$guid}}\",\r\n        \"reference\": \"{{$guid}}\"\r\n    },\r\n    \"interaction\": {\r\n        \"operation\": \"PURCHASE\",\r\n        \"merchant\": {\r\n            \"name\": \"TEST\"\r\n        },\r\n        \"returnUrl\": \"https://www.nbg.com/complete\",\r\n        \"cancelUrl\": \"https://www.nbg.com/cancel\",\r\n        \"displayControl\": {\r\n            \"billingAddress\": \"HIDE\"\r\n        }\r\n    }\r\n}"
								},
								"url": {
									"raw": "https://{{PROD_URL}}/api/rest/version/57/merchant/{{MID}}/session",
									"protocol": "https",
									"host": [
										"{{PROD_URL}}"
									],
									"path": [
										"api",
										"rest",
										"version",
										"57",
										"merchant",
										"{{MID}}",
										"session"
									]
								}
							},
							"response": []
						}
					]
				}
			]
		},
		{
			"name": "Retrieve Order",
			"request": {
				"method": "GET",
				"header": [],
				"url": {
					"raw": "https://{{PROD_URL}}/api/rest/version/57/merchant/{{MID}}/order/{{ORDER_ID}}",
					"protocol": "https",
					"host": [
						"{{PROD_URL}}"
					],
					"path": [
						"api",
						"rest",
						"version",
						"57",
						"merchant",
						"{{MID}}",
						"order",
						"{{ORDER_ID}}"
					]
				}
			},
			"response": []
		},
		{
			"name": "Refund",
			"request": {
				"method": "PUT",
				"header": [
					{
						"key": "Content-Type",
						"name": "Content-Type",
						"type": "text",
						"value": "application/json"
					}
				],
				"body": {
					"mode": "raw",
					"raw": "{\n    \"apiOperation\": \"REFUND\",\n    \"transaction\": {\n        \"amount\": 500,\n        \"currency\": \"EUR\"\n    }\n}"
				},
				"url": {
					"raw": "https://{{PROD_URL}}/api/rest/version/57/merchant/{{MID}}/order/{{ORDER_ID}}/transaction/{{$guid}}",
					"protocol": "https",
					"host": [
						"{{PROD_URL}}"
					],
					"path": [
						"api",
						"rest",
						"version",
						"57",
						"merchant",
						"{{MID}}",
						"order",
						"{{ORDER_ID}}",
						"transaction",
						"{{$guid}}"
					]
				}
			},
			"response": [
				{
					"name": "Refund",
					"originalRequest": {
						"method": "PUT",
						"header": [
							{
								"key": "Content-Type",
								"name": "Content-Type",
								"type": "text",
								"value": "application/json"
							}
						],
						"body": {
							"mode": "raw",
							"raw": "{\n    \"apiOperation\": \"REFUND\",\n    \"transaction\": {\n        \"amount\": 100,\n        \"currency\": \"EUR\"\n    }\n}"
						},
						"url": {
							"raw": "https://test.ibanke-commerce.nbg.gr/api/rest/version/54/merchant/{{merchantIdPay}}/order/181c86fe-f424-4166-ae38-c4285c3dfc80/transaction/{{$guid}}",
							"protocol": "https",
							"host": [
								"test",
								"ibanke-commerce",
								"nbg",
								"gr"
							],
							"path": [
								"api",
								"rest",
								"version",
								"54",
								"merchant",
								"{{merchantIdPay}}",
								"order",
								"181c86fe-f424-4166-ae38-c4285c3dfc80",
								"transaction",
								"{{$guid}}"
							]
						}
					},
					"status": "Created",
					"code": 201,
					"_postman_previewlanguage": "json",
					"header": [
						{
							"key": "Date",
							"value": "Mon, 27 Jan 2020 15:14:35 GMT"
						},
						{
							"key": "Pragma",
							"value": "no-cache"
						},
						{
							"key": "Cache-Control",
							"value": "no-store, no-cache, must-revalidate, max-age=0"
						},
						{
							"key": "Expires",
							"value": "0"
						},
						{
							"key": "Content-Type",
							"value": "application/json;charset=ISO-8859-1"
						},
						{
							"key": "Content-Length",
							"value": "1683"
						},
						{
							"key": "Set-Cookie",
							"value": "TS0183aa3c=01772feb4b36241edac893d9add40d52fc257967d041081f29d5d0f37b12ecf0d217b575e1f56256bdc20152302557f125100ec0b5; Path=/; HTTPOnly;Secure"
						},
						{
							"key": "Connection",
							"value": "close"
						}
					],
					"cookie": [],
					"body": "{\n    \"authorizationResponse\": {\n        \"cardSecurityCodeError\": \"M\",\n        \"commercialCard\": \"888\",\n        \"commercialCardIndicator\": \"3\",\n        \"financialNetworkCode\": \"777\",\n        \"posData\": \"1025100006600\",\n        \"posEntryMode\": \"812\",\n        \"processingCode\": \"003000\",\n        \"responseCode\": \"00\",\n        \"stan\": \"182946\",\n        \"transactionIdentifier\": \"123456789\"\n    },\n    \"device\": {\n        \"browser\": \"Mozilla/5.0 (Windows NT 10.0; Win64; x64) AppleWebKit/537.36 (KHTML, like Gecko) Chrome/79.0.3945.130 Safari/537.36\",\n        \"ipAddress\": \"195.78.86.91\"\n    },\n    \"gatewayEntryPoint\": \"WEB_SERVICES_API\",\n    \"merchant\": \"TEST700123123\",\n    \"order\": {\n        \"amount\": 100,\n        \"chargeback\": {\n            \"amount\": 0,\n            \"currency\": \"EUR\"\n        },\n        \"creationTime\": \"2020-01-27T15:13:51.951Z\",\n        \"currency\": \"EUR\",\n        \"id\": \"181c86fe-f424-4166-ae38-c4285c3dfc80\",\n        \"merchantCategoryCode\": \"1234\",\n        \"reference\": \"74f0b951-dbbd-49ca-b13f-957d7564f7aa\",\n        \"status\": \"REFUNDED\",\n        \"totalAuthorizedAmount\": 100,\n        \"totalCapturedAmount\": 100,\n        \"totalRefundedAmount\": 100\n    },\n    \"response\": {\n        \"acquirerCode\": \"00\",\n        \"cardSecurityCode\": {\n            \"acquirerCode\": \"M\",\n            \"gatewayCode\": \"MATCH\"\n        },\n        \"gatewayCode\": \"APPROVED\"\n    },\n    \"result\": \"SUCCESS\",\n    \"sourceOfFunds\": {\n        \"provided\": {\n            \"card\": {\n                \"brand\": \"MASTERCARD\",\n                \"expiry\": {\n                    \"month\": \"5\",\n                    \"year\": \"21\"\n                },\n                \"fundingMethod\": \"CREDIT\",\n                \"issuer\": \"BANCO DEL PICHINCHA, C.A.\",\n                \"nameOnCard\": \"babias\",\n                \"number\": \"512345xxxxxx0008\",\n                \"scheme\": \"MASTERCARD\",\n                \"storedOnFile\": \"NOT_STORED\"\n            }\n        },\n        \"type\": \"CARD\"\n    },\n    \"timeOfRecord\": \"2020-01-27T15:14:35.040Z\",\n    \"transaction\": {\n        \"acquirer\": {\n            \"batch\": 20200127,\n            \"date\": \"0127\",\n            \"id\": \"NBG_S2I\",\n            \"merchantId\": \"cosmoteid01\",\n            \"settlementDate\": \"2020-01-27\",\n            \"timeZone\": \"+0200\",\n            \"transactionId\": \"123456789\"\n        },\n        \"amount\": 100,\n        \"currency\": \"EUR\",\n        \"id\": \"38af7ab6-64b7-4558-9f8f-377b95e3ece7\",\n        \"receipt\": \"002715182946\",\n        \"source\": \"INTERNET\",\n        \"terminal\": \"01coster\",\n        \"type\": \"REFUND\"\n    },\n    \"version\": \"54\"\n}"
				}
			]
		},
		{
			"name": "Cancel (VOID)",
			"event": [
				{
					"listen": "prerequest",
					"script": {
						"exec": [
							""
						],
						"type": "text/javascript"
					}
				},
				{
					"listen": "test",
					"script": {
						"exec": [
							"var jsonData = JSON.parse(responseBody);",
							"postman.setEnvironmentVariable(\"orderId\", jsonData.order.id);"
						],
						"type": "text/javascript"
					}
				}
			],
			"request": {
				"method": "PUT",
				"header": [
					{
						"key": "Content-Type",
						"name": "Content-Type",
						"type": "text",
						"value": "application/json"
					}
				],
				"body": {
					"mode": "raw",
					"raw": "{\n    \"apiOperation\": \"VOID\",\n     \"transaction\": {\n     \t\"targetTransactionId\": \"{{LAST_TRANSACTION_ID}}\"\n     }\n}"
				},
				"url": {
					"raw": "https://{{PROD_URL}}/api/rest/version/57/merchant/{{MID}}/order/{{ORDER_ID}}/transaction/{{$guid}}",
					"protocol": "https",
					"host": [
						"{{PROD_URL}}"
					],
					"path": [
						"api",
						"rest",
						"version",
						"57",
						"merchant",
						"{{MID}}",
						"order",
						"{{ORDER_ID}}",
						"transaction",
						"{{$guid}}"
					]
				}
			},
			"response": []
		}
	],
	"auth": {
		"type": "basic",
		"basic": [
			{
				"key": "password",
				"value": "{{API_KEY}}",
				"type": "string"
			},
			{
				"key": "username",
				"value": "merchant.{{MID}}",
				"type": "string"
			}
		]
	},
	"event": [
		{
			"listen": "prerequest",
			"script": {
				"type": "text/javascript",
				"exec": [
					""
				]
			}
		},
		{
			"listen": "test",
			"script": {
				"type": "text/javascript",
				"exec": [
					""
				]
			}
		}
	]
}
